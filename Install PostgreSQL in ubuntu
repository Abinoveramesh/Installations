To install PostgreSQL, set the password for the postgres user (which is the default superuser), and log in to PostgreSQL, follow the steps below.


1. Install PostgreSQL
  sudo apt update
  sudo apt install postgresql postgresql-contrib


2. Set Password for the postgres User

By default, PostgreSQL uses the postgres user for database administration. To set the password for the postgres user:
  sudo -u postgres psql
Once you are in the PostgreSQL shell, run the following command to change the password: 
  ALTER USER postgres WITH PASSWORD 'your_password';
Replace your_password with the password you want to set for the postgres user.

3. Exit the PostgreSQL Shell by typing:
\q

4. Log in with the postgres User: 
To log in to PostgreSQL with the new password, you can run the following command:
  psql -U postgres -W
The -U flag specifies the username (postgres in this case), and -W prompts you to enter the password. You will be prompted to enter the password you just set.

5. Verify the Installation and Connection, Once logged in, you can verify the connection and database by running:
  \l




#To see status:
sudo systemctl status postgresql

#Login
sudo su - postgres
psql

#login other user
psql -h 127.0.0.1 -U usertravelfrc -d traveldevelopmet -p 5432

#To change this postgres password:
ALTER USER postgres WITH PASSWORD 'root';

#To create a root user:
CREATE ROLE root WITH SUPERUSER CREATEDB CREATEROLE LOGIN PASSWORD 'root';

#To create a user with certain access:

#Grant the testuser permissions to read from and write to the testerdb database:
GRANT CONNECT ON DATABASE testerdb TO testuser;

#Switch to the testerdb database to grant permissions on all tables:
\c testerdb

GRANT USAGE ON SCHEMA public TO testuser;
#Then grant SELECT, INSERT, UPDATE, and DELETE permissions on all current tables:
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO testuser;

#To ensure testuser gets permissions on any future tables created in the public schema, execute:
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO testuser;
\q






1Ô∏è‚É£ /dt ‚Üí List all tables
Shows all tables in the connected database.
Equivalent to:
SELECT tablename FROM pg_tables WHERE schemaname = 'public';


2Ô∏è‚É£ /d [table_name] ‚Üí Describe a table
Shows the schema (structure) of a specific table.
Equivalent to:
SELECT column_name, data_type FROM information_schema.columns WHERE table_name = 'your_table';
Example:
\d employees  -- Shows structure of 'employees' table


3Ô∏è‚É£ /tt ‚Üí List all tables and views
Shows both tables and views in the database.
Equivalent to:
SELECT * FROM information_schema.tables WHERE table_schema = 'public';


4Ô∏è‚É£ /l ‚Üí List all databases
Displays all databases in PostgreSQL.
Equivalent to:
SELECT datname FROM pg_database;

Example output:
List of databases
 Name    |  Owner  | Encoding | ...
-----------------------------
 mydb    | postgres | UTF8     | ...
 testdb  | postgres | UTF8     | ...


üí° Pro Tip: These commands work inside the psql terminal. To enter it, run:
psql -U postgres -d your_database




+-------------------------------------+------------------------------------------------+
| Command                             | Description                                    |
+-------------------------------------+------------------------------------------------+
| \l                                  | List all databases                            |
| \c database_name                    | Connect to a different database               |
| \du                                 | List all users & roles                        |
| \password username                   | Change user password                          |
| \q                                  | Quit the psql terminal                        |
| \dt                                 | List all tables in the current database       |
| \d table_name                       | Describe a table structure                    |
| \dt+                                | List tables with additional details           |
| \dv                                 | List all views                                |
| \di                                 | List all indexes                              |
| \ds                                 | List all sequences                            |
| \df                                 | List all functions                            |
| \dn                                 | List all schemas                              |
| \dp                                 | Show table privileges                         |
| \db                                 | List all tablespaces                          |
| SELECT * FROM table_name;            | View all rows from a table                    |
| INSERT INTO table_name VALUES (...); | Insert a new row                              |
| UPDATE table_name SET col=value WHERE cond; | Update existing data              |
| DELETE FROM table_name WHERE cond;   | Delete specific data                          |
| TRUNCATE TABLE table_name;           | Delete all rows from a table                  |
| DROP TABLE table_name;               | Delete a table permanently                    |
| EXPLAIN ANALYZE query;               | Analyze query performance                     |
| CREATE USER username WITH PASSWORD 'pass'; | Create a new user                     |
| DROP USER username;                  | Delete a user                                 |
| GRANT ALL PRIVILEGES ON db TO user;  | Grant full access to a user                   |
| REVOKE ALL PRIVILEGES ON db FROM user; | Remove access from a user                   |
| BEGIN;                               | Start a transaction                           |
| COMMIT;                              | Commit a transaction                          |
| ROLLBACK;                            | Rollback a transaction                        |
| SELECT * FROM pg_locks;              | Show currently active locks                   |
| SELECT * FROM pg_stat_activity;      | Show all active queries                       |
| CREATE INDEX idx_name ON table (col);| Create an index                               |
| DROP INDEX idx_name;                 | Remove an index                               |
| VACUUM ANALYZE;                      | Optimize database performance                 |
| CLUSTER table_name USING index_name; | Cluster data based on an index                |
| pg_dump -U user -d db -F c -f file.dump | Create a compressed backup              |
| pg_restore -U user -d db file.dump   | Restore from a backup                         |
| psql -U user -d db -f backup.sql     | Restore from a SQL backup                     |
| \x                                   | Toggle expanded display mode                  |
| \timing                              | Show query execution time                     |
| \echo 'Hello'                        | Print a message in psql                       |
| \watch query                         | Execute a query repeatedly every 2 seconds    |
| \?                                   | Show all available psql commands              |
+-------------------------------------+------------------------------------------------+
