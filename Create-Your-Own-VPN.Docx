How to create my own vpn 


Step 1: Prerequisites
A server with a public IP address (e.g., AWS EC2, DigitalOcean, or an on-premise server).
Ubuntu 20.04/22.04 installed on the server.
Basic knowledge of Linux commands.
SSH access to the server.
A domain or subdomain (optional, for easier client setup).

----------------------------------------------------------------------------------------------------------------------------------------------
Step 2: Install OpenVPN and EasyRSA
Update the system:
sudo apt update && sudo apt upgrade -y

Install OpenVPN and EasyRSA:
sudo apt install openvpn easy-rsa -y

----------------------------------------------------------------------------------------------------------------------------------------------

Step 3: Set Up the Certificate Authority (CA)

Create an EasyRSA directory:
make-cadir ~/easy-rsa
cd ~/easy-rsa

Initialize the PKI (Public Key Infrastructure):
./easyrsa init-pki

Build the CA:
./easyrsa build-ca
You’ll be prompted to set a passphrase and enter details (e.g., organization name).


----------------------------------------------------------------------------------------------------------------------------------------------

Step 4: Generate Server and Client Certificates
Generate the Server Certificate and Key:
./easyrsa gen-req server nopass
cp pki/private/server.key /etc/openvpn/

Sign the Server Certificate:
./easyrsa sign-req server server
cp pki/issued/server.crt /etc/openvpn/
cp pki/ca.crt /etc/openvpn/

Generate Diffie-Hellman Parameters:
./easyrsa gen-dh
cp pki/dh.pem /etc/openvpn/

Generate Client Certificates:
./easyrsa gen-req client1 nopass
./easyrsa sign-req client client1

Replace client1 with a unique name for each user.
Copy Client Files:
cp pki/ca.crt pki/issued/client1.crt pki/private/client1.key ~/


----------------------------------------------------------------------------------------------------------------------------------------------

Step 5: Configure the OpenVPN Server

Copy and Edit the Server Configuration:
gunzip -c /usr/share/doc/openvpn/examples/sample-config-files/server.conf.gz > /etc/openvpn/server.conf

Edit /etc/openvpn/server.conf to include:
ca ca.crt
cert server.crt
key server.key
dh dh.pem
push "redirect-gateway def1 bypass-dhcp"
push "dhcp-option DNS 8.8.8.8"
push "dhcp-option DNS 8.8.4.4"

Replace DNS servers with your organization’s DNS or public DNS (like Google’s).

Enable IP Forwarding:
echo 'net.ipv4.ip_forward=1' | sudo tee -a /etc/sysctl.conf
sudo sysctl -p

Configure Firewall Rules:
sudo ufw allow 1194/udp
sudo ufw allow OpenSSH
sudo ufw enable

Add NAT rules to /etc/ufw/before.rules:
*nat
:POSTROUTING ACCEPT [0:0]
-A POSTROUTING -s 10.8.0.0/24 -o eth0 -j MASQUERADE
COMMIT

----------------------------------------------------------------------------------------------------------------------------------------------
Step 6: Start the OpenVPN Server

Enable and start OpenVPN:
sudo systemctl start openvpn@server
sudo systemctl enable openvpn@server

Verify the server is running:
sudo systemctl status openvpn@server

----------------------------------------------------------------------------------------------------------------------------------------------
Step 7: Configure the Client
Create a Client Configuration File (client.ovpn):
client
dev tun
proto udp
remote YOUR_SERVER_IP 1194
resolv-retry infinite
nobind
persist-key
persist-tun
remote-cert-tls server
auth SHA256
cipher AES-256-CBC
verb 3
<ca>
# Paste the contents of ca.crt here
</ca>
<cert>
# Paste the contents of client1.crt here
</cert>
<key>
# Paste the contents of client1.key here
</key>


Install the OpenVPN client on the user's device:

On Linux: Use the openvpn command.
On Windows/Mac: Use a GUI client like OpenVPN Connect.
Import the .ovpn file into the client and connect.


----------------------------------------------------------------------------------------------------------------------------------------------

Step 8: Test the VPN
Connect using the client.
Verify your IP by visiting https://whatismyipaddress.com to ensure it matches the VPN server's public IP.

----------------------------------------------------------------------------------------------------------------------------------------------

Optional Enhancements
Use a Domain Name:
    Assign a domain or subdomain (e.g., vpn.company.com) for easier client configuration.
Install OpenVPN Access Server:
    Provides a web-based admin UI for managing users and settings.
Multi-factor Authentication (MFA):
    Add an extra layer of security using tools like Google Authenticator.
Automate with Scripts:
    Use bash scripts to streamline user certificate creation.

